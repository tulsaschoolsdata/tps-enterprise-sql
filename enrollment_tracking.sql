WITH STUD AS (
  SELECT
    STUDENTS.STUDENT_NUMBER,
    STUDENTS.ID,
    STUDENTS.LASTFIRST,
    STUDENTS.FIRST_NAME,
    STUDENTS.MIDDLE_NAME,
    STUDENTS.LAST_NAME,
    STUDENTS.SCHOOLID,
    STUDENTS.SCHED_YEAROFGRADUATION,
    STUDENTS.ENROLL_STATUS
  FROM
    STUDENTS
), TERM AS (
  SELECT
    DISTINCT(TERMS.NAME),
    TERMS.FIRSTDAY,
    TERMS.LASTDAY,
    TERMS.YEARID,
    TERMS.PORTION,
    TERMS.SCHOOLID
  FROM
    TERMS
  WHERE
    REGEXP_LIKE(TERMS.NAME, '[0-9]{4}-[0-9]{4}$')
), CYE AS (
 -- current enrollment equal entry and exit dates  should be yearid 33
  SELECT
    ST.ID                                    STUDENTID,
    ST.ENTRYDATE                             ENTRYDATE,
    ST.EXITDATE                              EXITDATE,
    ST.EXITCODE                              EXITCODE,
    DBMS_LOB.SUBSTR(ST.EXITCOMMENT, 4000, 1) EXITCOMMENT,
    ST.ENROLL_STATUS,
    ST.SCHED_YEAROFGRADUATION                COHORT,
    ST.SCHOOLID                              SCHOOLID,
    (
      SELECT
        SCHOOLS.NAME
      FROM
        SCHOOLS
      WHERE
        SCHOOLS.SCHOOL_NUMBER = ST.SCHOOLID
    ) SCHOOL_NAME,
    'Current Enrollment' AS ENROLLMENT,
    TERM.NAME TERM_NAME,
    TERM.FIRSTDAY,
    TERM.LASTDAY
  FROM
    STUDENTS ST
    JOIN SCHOOLS
    ON ST.SCHOOLID = SCHOOLS.SCHOOL_NUMBER LEFT JOIN TERM
    ON TERM.SCHOOLID = ST.SCHOOLID
  WHERE
    ST.EXITDATE < TRUNC(SYSDATE)
    AND ST.EXITDATE < TERM.LASTDAY
    AND ST.ENTRYDATE >= TERM.FIRSTDAY
    AND SCHOOLS.SCHOOLCATEGORYCODESETID IN (35201, 35202, 35203)
    AND ST.EXITCODE IN ('1927', '1925', '1926', '1918', '1916', '1907', '3505', '1921')
    AND ST.EXITDATE = ST.ENTRYDATE
    AND :P18_CURRENT_OR_PREVIOUS_ENROLLMENT = 'current'
    AND :P18_DATES_EQUAL = 'true'
    AND TERM.YEARID = :P18_YEARID
  UNION
 --current entry and exit dates not equal should be yearid 33
  SELECT
    ST.ID                                    STUDENTID,
    ST.ENTRYDATE                             ENTRYDATE,
    ST.EXITDATE                              EXITDATE,
    ST.EXITCODE                              EXITCODE,
    DBMS_LOB.SUBSTR(ST.EXITCOMMENT, 4000, 1) EXITCOMMENT,
    ST.ENROLL_STATUS,
    ST.SCHED_YEAROFGRADUATION                COHORT,
    ST.SCHOOLID                              SCHOOLID,
    (
      SELECT
        SCHOOLS.NAME
      FROM
        SCHOOLS
      WHERE
        SCHOOLS.SCHOOL_NUMBER = ST.SCHOOLID
    ) SCHOOL_NAME,
    'Current Enrollment' AS ENROLLMENT,
    TERM.NAME TERM_NAME,
    TERM.FIRSTDAY,
    TERM.LASTDAY
  FROM
    STUDENTS ST
    JOIN SCHOOLS
    ON ST.SCHOOLID = SCHOOLS.SCHOOL_NUMBER LEFT JOIN TERM
    ON TERM.SCHOOLID = ST.SCHOOLID
  WHERE
    ST.EXITDATE < TRUNC(SYSDATE)
    AND ST.EXITDATE < TERM.LASTDAY
    AND ST.ENTRYDATE >= TERM.FIRSTDAY
    AND SCHOOLS.SCHOOLCATEGORYCODESETID IN (35201, 35202, 35203)
    AND ST.EXITCODE IN ('1927', '1925', '1926', '1918', '1916', '1907', '3505', '1921')
    AND ST.ENTRYDATE != ST.EXITDATE
    AND :P18_CURRENT_OR_PREVIOUS_ENROLLMENT = 'current'
    AND :P18_DATES_EQUAL = 'false'
    AND TERM.YEARID = :P18_YEARID
), PYE AS (
  SELECT
    STUD.ID                                             STUDENTID
 -- previous entry and exit dates equal
,
    REENROLLMENTS.ENTRYDATE                             ENTRYDATE,
    REENROLLMENTS.EXITDATE                              EXITDATE,
    REENROLLMENTS.EXITCODE                              EXITCODE,
    DBMS_LOB.SUBSTR(REENROLLMENTS.EXITCOMMENT, 4000, 1) EXITCOMMENT,
    STUD.ENROLL_STATUS,
    STUD.SCHED_YEAROFGRADUATION                         COHORT,
    REENROLLMENTS.SCHOOLID                              SCHOOLID,
    (
      SELECT
        SCHOOLS.NAME
      FROM
        SCHOOLS
      WHERE
        SCHOOLS.SCHOOL_NUMBER = REENROLLMENTS.SCHOOLID
    ) SCHOOL_NAME,
    'Previous Enrollment' ENROLLMENT,
    TERM.NAME TERM_NAME,
    TERM.FIRSTDAY,
    TERM.LASTDAY
  FROM
    REENROLLMENTS
    JOIN STUD
    ON REENROLLMENTS.STUDENTID = STUD.ID JOIN SCHOOLS
    ON REENROLLMENTS.SCHOOLID = SCHOOLS.SCHOOL_NUMBER
    LEFT JOIN TERM
    ON TERM.SCHOOLID = REENROLLMENTS.SCHOOLID
  WHERE
    REENROLLMENTS.EXITCODE IN ('1927', '1925', '1926', '1918', '1916', '1907', '3505', '1921')
    AND SCHOOLS.SCHOOLCATEGORYCODESETID IN (35201, 35202, 35203)
    AND REENROLLMENTS.EXITDATE = (
      SELECT
        MAX(RE.EXITDATE)
      FROM
        REENROLLMENTS RE
      WHERE
        RE.STUDENTID = REENROLLMENTS.STUDENTID
        AND RE.EXITDATE = RE.ENTRYDATE
    )
    AND REENROLLMENTS.ENTRYDATE = REENROLLMENTS.EXITDATE
    AND REGEXP_LIKE(REENROLLMENTS.EXITCODE, '[0-9]{4}')
    AND REENROLLMENTS.EXITDATE < TERM.LASTDAY
    AND REENROLLMENTS.ENTRYDATE >= TERM.FIRSTDAY
    AND :P18_DATES_EQUAL = 'true'
    AND :P18_CURRENT_OR_PREVIOUS_ENROLLMENT = 'previous'
    AND TERM.YEARID = :P18_YEARID
  UNION
 -- previous entry and exit dates not equal
  SELECT
    STUD.ID                                             STUDENTID,
    REENROLLMENTS.ENTRYDATE                             ENTRYDATE,
    REENROLLMENTS.EXITDATE                              EXITDATE,
    REENROLLMENTS.EXITCODE                              EXITCODE,
    DBMS_LOB.SUBSTR(REENROLLMENTS.EXITCOMMENT, 4000, 1) EXITCOMMENT,
    STUD.ENROLL_STATUS,
    STUD.SCHED_YEAROFGRADUATION                         COHORT,
    REENROLLMENTS.SCHOOLID                              SCHOOLID,
    (
      SELECT
        SCHOOLS.NAME
      FROM
        SCHOOLS
      WHERE
        SCHOOLS.SCHOOL_NUMBER = REENROLLMENTS.SCHOOLID
    ) SCHOOL_NAME,
    'Previous Enrollment' ENROLLMENT,
    TERM.NAME TERM_NAME,
    TERM.FIRSTDAY,
    TERM.LASTDAY
  FROM
    REENROLLMENTS
    JOIN STUD
    ON REENROLLMENTS.STUDENTID = STUD.ID JOIN SCHOOLS
    ON REENROLLMENTS.SCHOOLID = SCHOOLS.SCHOOL_NUMBER
    JOIN TERM
    ON TERM.SCHOOLID = STUD.SCHOOLID
  WHERE
    REENROLLMENTS.EXITCODE IN ('1927', '1925', '1926', '1918', '1916', '1907', '3505', '1921')
    AND SCHOOLS.SCHOOLCATEGORYCODESETID IN (35201, 35202, 35203)
    AND REENROLLMENTS.EXITDATE = (
      SELECT
        MAX(RE.EXITDATE)
      FROM
        REENROLLMENTS RE
      WHERE
        RE.STUDENTID = REENROLLMENTS.STUDENTID
        AND RE.ENTRYDATE != RE.EXITDATE
    )
    AND REENROLLMENTS.ENTRYDATE != REENROLLMENTS.EXITDATE
    AND REGEXP_LIKE(REENROLLMENTS.EXITCODE, '[0-9]{4}')
    AND REENROLLMENTS.EXITDATE < TERM.LASTDAY
    AND REENROLLMENTS.ENTRYDATE >= TERM.FIRSTDAY
    AND :P18_DATES_EQUAL = 'false'
    AND :P18_CURRENT_OR_PREVIOUS_ENROLLMENT = 'previous'
    AND TERM.YEARID = :P18_YEARID
), COMBINED AS (
  SELECT
    STUD.ID                              ID,
    STUD.LASTFIRST                       LASTFIRST,
    STUD.STUDENT_NUMBER,
    STUD.FIRST_NAME,
    STUD.MIDDLE_NAME,
    STUD.LAST_NAME,
    TO_CHAR(CYE.ENTRYDATE, 'MM/DD/YYYY') ENTRYDATE,
    TO_CHAR(CYE.EXITDATE, 'MM/DD/YYYY')  EXITDATE,
    CYE.EXITCODE,
    CYE.EXITCOMMENT,
    CYE.ENROLL_STATUS,
    CYE.COHORT,
    CYE.SCHOOLID,
    CYE.SCHOOL_NAME,
    CYE.ENROLLMENT,
    CYE.TERM_NAME,
    TO_CHAR(CYE.FIRSTDAY, 'MM/DD/YYYY')  FIRSTDAY,
    TO_CHAR(CYE.LASTDAY, 'MM/DD/YYYY')   LASTDAY
  FROM
    (
      SELECT
        STUD.*
      FROM
        STUD
    )   STUD
    JOIN CYE
    ON STUD.ID = CYE.STUDENTID UNION
    SELECT
      STUD.ID,
      STUD.LASTFIRST,
      STUD.STUDENT_NUMBER,
      STUD.FIRST_NAME,
      STUD.MIDDLE_NAME,
      STUD.LAST_NAME,
      TO_CHAR(PYE.ENTRYDATE, 'MM/DD/YYYY') ENTRYDATE,
      TO_CHAR(PYE.EXITDATE, 'MM/DD/YYYY')  EXITDATE,
      PYE.EXITCODE,
      PYE.EXITCOMMENT,
      PYE.ENROLL_STATUS,
      PYE.COHORT,
      PYE.SCHOOLID,
      PYE.SCHOOL_NAME,
      PYE.ENROLLMENT,
      PYE.TERM_NAME,
      TO_CHAR(PYE.FIRSTDAY, 'MM/DD/YYYY')  FIRSTDAY,
      TO_CHAR(PYE.LASTDAY, 'MM/DD/YYYY')   LASTDAY
    FROM
      (
        SELECT
          STUD.*
        FROM
          STUD
      )   STUD
      JOIN PYE
      ON STUD.ID = PYE.STUDENTID
)
SELECT
  ID             ID,
  LASTFIRST,
  STUDENT_NUMBER,
  FIRST_NAME,
  MIDDLE_NAME,
  LAST_NAME,
  ENTRYDATE,
  EXITDATE,
  EXITCODE,
  EXITCOMMENT,
  ENROLL_STATUS,
  COHORT,
  SCHOOLID,
  SCHOOL_NAME,
  ENROLLMENT,
  TERM_NAME,
  FIRSTDAY,
  LASTDAY
FROM
  (
    SELECT
      COMBINED.*
    FROM
      COMBINED
  ) COMBINED
ORDER BY
  STUDENT_NUMBER,
  EXITDATE